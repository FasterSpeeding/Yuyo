[build-system]
requires = ["flit_core >=3.3,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "hikari-yuyo"
version = "1.11.1a1"
readme = "README.md"
requires-python = ">=3.9.0,<3.12"
license = {file = "LICENSE"}
authors = [ {name = "Faster Speeding", email="lucina@lmbyrne.dev"} ]
keywords= ["hikari"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: BSD License",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Communications :: Chat",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
    "Typing :: Typed"
]
dependencies = ["alluka>=0.1.2, <1", "hikari>=2.0.0.dev118, <3", "typing_extensions>=4.5"]
dynamic = ["description"]

[project.optional-dependencies]
asgi = ["asgiref~=3.0", "hikari[server]"]
sake = ["hikari-sake>=1.0.4a1, <2"]
tanjun = ["hikari-tanjun>=2.11.0, <3"]

[project.urls]
Homepage = "https://github.com/FasterSpeeding/Yuyo"
Repository = "https://github.com/FasterSpeeding/Yuyo"
Documentation = "https://yuyo.cursed.solutions/"
Changelog = "https://github.com/FasterSpeeding/Yuyo/blob/master/CHANGELOG.md"

[tool.flit.module]
name = "yuyo"

[tool.black]
extend-exclude = "^\\/yuyo\\/_internal\\/vendor\\/.*$"
include = ".*pyi?$"
line-length = 120
skip-magic-trailing-comma = true
target-version = ["py39"]

[tool.coverage.run]
concurrency = ["multiprocessing"]
parallel = true
branch = true
timid = false
source = ["yuyo"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "^\\s*\\.\\.\\.$",
    "^\\s*@abc.abstractmethod$",
    "^if typing.TYPE_CHECKING:$"
]
omit = ["yuyo/_internal/vendor/*"]

[tool.flake8]
accept-encodings = "utf-8"
count = true
docstring-convention = "numpy"
eradicate-aggressive = true
exclude = ["yuyo/_internal/vendor/**"]
extend-select = ["TC100", "TC101"]
force-future-annotations = true
ignore-decorators = "overload"
max-complexity = 20
max-function-length = 100
# Technically this is 120, but black has a policy of "1 or 2 over is fine if it is tidier", so we have to raise this.
max-line-length = 130
min_python_version = "3.9"
pep585-activation = "always"
show_source = false
statistics = false
ignore = [
    "A003",    # class attribute is shadowing a builtin
    "CFQ004",  # Function has too many returns.
    "CFQ002",  # Function has too many arguments.
    "D102",    # Missing docstring in public method.
    "D105",    # Magic methods not having a docstring.
    "D401",    # Conflits with property doc-strings too much.
    "D404",    # Conflits with property doc-strings too much.
    "D412",    # No blank lines allowed between a section header and its content
    "E402",    # Module level import not at top of file (isn't compatible with our import style).
    "IFS001",  # "use a oneliner here".
    "N818",    # Exceptions should have an "Error" suffix in their name
    "SIM105",  # Use contextlib.suppress
    "TC003",   # Avoid specifying long messages outside the exception class (this hits way too many std exceptions rn)
    "T101",    # TO-DO comment detection (T102 is FIX-ME and T103 is XXX).
    "W503",    # line break before binary operator.
    "W504",    # line break before binary operator (again, I guess).
    "S101",    # Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
    "E203",    # whitespace before ':'
    "E231",    # missing whitespace after ','
]
per-file-ignores = [
    "examples/*.py: D103, FA101",
    "noxfile.py: D100, FA101, F401, F403, INP001",
    "tests/*.py: CCE002, CFQ001, D100, D101, D103, D104, FA100, FA101",
    "yuyo/py.typed: D100",
]

[tool.isort]
profile = "black"
force_single_line = true
skip = ["yuyo/_internal/vendor"]

[tool.mypy]
# some good strict settings
python_version = 3.9
strict = true
warn_unreachable = true

# more narrow type ignores
show_error_codes = true

# these are used by pyright
warn_unused_ignores = false
warn_redundant_casts = false

# compatibility with pyright
allow_redefinition = true
disable_error_code = ["type-abstract"]

# Ignore vendored modules
exclude = ["yuyo/_internal/vendor/"]

[tool.piped]
default_sessions = [
    "reformat",
    "verify-markup",
    "flake8",
    "spell-check",
    "slot-check",
    "type-check",
    "test",
    "verify-types",
]
extra_test_installs = ["."]
path_ignore = "yuyo\\/_internal\\/vendor\\/"
mypy_allowed_to_fail = true
mypy_targets = ["yuyo"]
project_name = "yuyo"
top_level_targets = ["./examples", "./noxfile.py", "./yuyo", "./tests"]

[tool.piped.github_actions.freeze_for_pr]
[tool.piped.github_actions.lint]
[tool.piped.github_actions.pr_docs]
[tool.piped.github_actions.publish]
[tool.piped.github_actions.py_test]
codeclimate_token = "ff91ba30df9fd9d4f49325b583807d32cff9370fb02c8b6a7487ed94f5326933"
python_versions = ["3.9", "3.10", "3.11"]

[tool.piped.github_actions.reformat]
[tool.piped.github_actions.release_docs]
[tool.piped.github_actions.resync_piped]
[tool.piped.github_actions.type_check]
[tool.piped.github_actions.update_licence]
[tool.piped.github_actions.upgrade_locks]
[tool.piped.github_actions.verify_locks]
[tool.piped.github_actions.verify_types]

[tool.pyright]
exclude = ["yuyo/_internal/vendor"]
include = ["examples", "noxfile.py", "tests", "yuyo"]

pythonVersion = "3.9"
typeCheckingMode = "strict"
reportMissingModuleSource = "error"  # Is only "warning" on strict mode.

# Error code which are disabled even when general strict.
reportShadowedImports = "error"
reportCallInDefaultInitializer = "none"  # Ended up just complaining about cases where this was fine (e.g. timedeltas).
reportImplicitStringConcatenation = "none"  # Conflicts with flake8 config.
reportMissingSuperCall = "none"  # Way too strict (requires calls to `object.__init__`).
reportPropertyTypeMismatch = "error"
reportUninitializedInstanceVariable = "error"
reportUnnecessaryTypeIgnoreComment = "error"
reportUnusedCallResult = "none"  # Enforces doing `_ = ...`.

# Error codes which lead to too many false-positives.
reportIncompatibleMethodOverride = "warning"    # This relies on ordering for key-word only arguments
                                                # which is more annoying than it's worth
reportUnknownMemberType = "warning"             # This messes with instance checking generic objects
reportUnknownArgumentType = "warning"           # Pretty much the same as reportUnknownMemberType
reportUnknownLambdaType = "warning"
reportImportCycles = "warning"                  # This isn't necessarily an issue if it's type checking only.
reportUnknownVariableType = "warning"           # Lotta false-positives, might fix/change later.

[tool.pytest.ini_options]
asyncio_mode = "strict"
testpaths = ["tests"]
required_plugins = ["pytest-asyncio"]
filterwarnings = ["error"]

[tool.slotscheck]
strict-imports = true
require-superclass = true
require-subclass = true
exclude-classes = """.*(Proto|Meta)|yuyo.modals:ModalOptions"""
exclude-modules = "yuyo._internal.vendor"
